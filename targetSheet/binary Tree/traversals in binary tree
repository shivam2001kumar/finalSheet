// Inorder traversal

class Solution {
  public:
    void solve(Node*root,vector<int>&v)
    {
        if(root==NULL) return;
        solve(root->left,v);
        v.push_back(root->data);
        solve(root->right,v);
    }
    
    
    // Function to return a list containing the inorder traversal of the tree.
    vector<int> inOrder(Node* root) {
        // Your code here
        vector<int> v;
        if(root==NULL) return v;
        solve(root,v);
        return v;
    }
};

// preorder traversal
void solve(Node*root,vector<int>&v)
    {
        if(root==NULL) return;
        v.push_back(root->data);
        solve(root->left,v);
        solve(root->right,v);
    }
//Function to return a list containing the preorder traversal of the tree.
vector <int> preorder(Node* root)
{
  // Your code here
  vector<int> v;
        if(root==NULL) return v;
        solve(root,v);
        return v;
}

// post traversal
void solve(Node*root,vector<int>&v)
    {
        if(root==NULL) return;
        solve(root->left,v);
        solve(root->right,v);
        v.push_back(root->data);
    }

vector <int> postOrder(Node* root)
{
  // Your code here
   vector<int> v;
        if(root==NULL) return v;
        solve(root,v);
        return v;
}
